// Question - https://leetcode.com/problems/paths-in-matrix-whose-sum-is-divisible-by-k/
// Answer in cpp


class Solution {
    vector<vector<vector<int>>> dp;
    long long int ans=0;
    int mod = 1e9+7;
public:
    int numberOfPaths(vector<vector<int>>& grid, int k) {
        dp = vector(grid.size()+1,vector(grid[0].size()+1,vector(k+1,-1)));
        return  dfs(0,0,grid,k,0,grid.size(),grid[0].size());
    }
    
    long dfs(int i,int j,vector<vector<int>>& grid,int k,long long int curr,int row,int col){
        if(i>=row || j>=col){
            return 0;
        }
        if(i==row-1 && j==col-1 && (curr+grid[i][j])%k==0){
                return 1;
        }
        if(dp[i][j][curr%k]!=-1) return dp[i][j][curr%k];
       long down = dfs(i+1,j,grid,k,(curr+grid[i][j])%mod,row,col);
       long right = dfs(i,j+1,grid,k,(curr+grid[i][j])%mod,row,col);
       return dp[i][j][curr%k]= (down+right)%mod;
        
    }
};
