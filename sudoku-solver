// Question - https://leetcode.com/problems/sudoku-solver/
// Answer in cpp


class Solution {
public:
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
    
    bool solve(vector<vector<char>>& board){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(board[i][j]=='.'){
                    for(char num= '1'; num<= '9';num++){
                        if(isValid(i,j,board,num)){
                            board[i][j] = num;
                            if(solve(board)==true) return true;
                            else board[i][j]='.';
                        } 
                    }
                    return false;
                }
            }
        }
        
        return true;
    }
    
    bool isValid(int row, int col, vector<vector<char>>& board, char &c){
        
        for(int i=0;i<9;i++){
            if(board[i][col]==c) return false;
            if(board[row][i]==c) return false;
            if(board[3*(row/3)+i/3][3*(col/3)+ i%3]==c) return false;
        }
        return true;
    }
};
