// Question - https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/
// Answer in cpp


class Solution {
    
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
       map<int,map<int,multiset<int>>> nodes;
        queue<pair<TreeNode*,pair<int,int>>> que;
        que.push({root,{0,0}});
        
        while(!que.empty()){
            auto temp = que.front();
            que.pop();
            TreeNode* node = temp.first;
            int x= temp.second.first,y=temp.second.second;
            nodes[x][y].insert(node->val);
            if(node->left){
                que.push({node->left,{x-1,y+1}});
            }
            if(node->right){
                que.push({node->right,{x+1,y+1}});
            }
        }
        
        for(auto& p:nodes){
            vector<int> col;
            for(auto&q:p.second){
                col.insert(col.end(),q.second.begin(),q.second.end());
            }
            ans.push_back(col);
        }
        
        
        return ans;
    }
    
   
     
};
