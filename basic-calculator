// Question - https://leetcode.com/problems/basic-calculator/
// Answer in cpp


Complexity
Time complexity:
O(N)

Space complexity:
O(N)

Code
class Solution {
public:
    int calculate(string s) {
        int ans=0;
        stack<pair<int,int>> st;
        int sign = 1;
        map<char,int> mp={{'+',1},{'-',1},{'(',1},{')',1}};
        for(int i=0; i<s.size();i++){
            char ch = s[i];

            if(ch =='+'|| ch=='-'){
                 if(ch=='-'){
                    sign= -sign; 
                 }
             } else  if(ch ==' '){
                
             } else  if(ch =='('){
                st.push({ans,sign});
                ans=0;
                sign=1;
             } else  if(ch ==')'){
                pair<int,int> temp = st.top();
                st.pop();
                ans  = ans*temp.second;
                ans += temp.first;
                sign=1;
             } else{
                 int num=0;
                 while((ch-48)>=0 && (ch-48)<=9){
                     num = num*10 + (ch-48);
                     ch = s[++i];
                 }
                 i--;
                 ans += (sign*num);
                    
                sign=1;
             }
        }

        
        

        return ans;
    }
};
